let add(x: int, y: int): int { x + y }

// good
add(2, 3);

// bad
add("2", "3");

let to-string(n: int): string {
  n
}

// Can only use booleans with logic operators
true && 1;
"false" || false;
2 && "4";

// Invalid left-hand side in assignment
true = false;
1 = 2;
"string" = "other string";
{ 10 } = { 20 };
if true { let n = 0; n } else { let n = 1; n } = 5;

mut n = 0;
n + 1 = n + 1;
add(2, 3) = 5;

// Detects invalid return values for functions
let get-n(n: int): int {
  if n > 10 {
    return "big";
  };

  if n < 0 {
    return false;
  };

  n
}

// Can annotate variables
let integer: int = 12;
let bad-integer: int = 'Nope';
let good-string: string = 'Yes';
let bad-string: string = 0;
let boolean: bool = true;
let bad-boolean: bool = 'false';

// Lists must only contain one type
let list: [int] = [1, '2', true];
