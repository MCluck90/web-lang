use @std:io/{readFile, writeFile, fileExists}
use @std:dom/{ * }

struct Todo {
  id: uint
  title: string,
  done: bool,
}

pub let getTodos() {
  parse<Todo[]>(readFile('todos.json'))
}

pub let saveTodo(todo: Todo) {
  let todos = getTodos().findAndMap({ it.id == todo.id }, { todo })
  writeFile('todos.json', toJson(todos))
}

let back main() {
  if !fileExists('todos.json') {
    let defaultTodos = Todo[][
      { id: 0, title: 'Write a proof of concept', done: true },
      { id: 1, title: 'Redesign object initialization syntax', done: false },
      { id: 2, title: 'Change lambda syntax to be more Kotlin-like', done: false },
      { id: 3, title: 'Move compiler to Rust or Kotlin', done: false },
    ]
    writeFile('todos.json', toJson(defaultTodos))
  }
}

style main {
  font_family: 'Arial, Helvetica, sans-serif',
}

let front main() {
  let todos = getTodos()

  main(
    style.main,
    h1('TODO'),
    ul(
      todos.map({
        li(
          input(new {
            checked: it.done,
            onChange: { saveTodo({ ...it, done: !it.done }) }
          }),
          label(it.title)
        )
      })
    )
  )
}